server:
  port: 9991

spring.oauth2:
  client:
    accessTokenUri: ${vcap.services.sso.credentials.tokenUri}
    userAuthorizationUri: ${vcap.services.sso.credentials.authorizationUri}
    clientId: ${vcap.services.sso.credentials.clientId}
    clientSecret: ${vcap.services.sso.credentials.clientSecret}


  resource:
    id: cloud_controller
    jwt:
      keyUri: ${vcap.services.sso.credentials.tokenKey}
    userInfoUri: ${vcap.services.sso.credentials.userInfoUri}
  check_token: ${vcap.services.sso.credentials.checkTokenUri}

oauth:
  resource: ${vcap.services.sso.credentials.apiEndpoint}
  uaa: ${vcap.services.sso.credentials.uaaUri}

nats:
  connection: ${vcap.services.nats-provider.credentials.url}
  registrating.triggerExpression: 0/60 * * * * ?

logging:
  level:
    org.springframework.web: INFO
    org.springframework.security: INFO
    org.trustedanalytics: DEBUG
    nats.client: DEBUG

security:
  ignored: /open,/*.js,/sdoc.jsp,/api-docs,/api-docs/default/*,/images/*,/lib/*,/css/*,/v2/api-docs,/api-docs/default/*

redis:
  hostname: ${vcap.services.redis28-for-service-exposer.credentials.hostname}
  port: ${vcap.services.redis28-for-service-exposer.credentials.port}

checker.triggerExpression: 0/5 * * * * ?

serviceTypes: "rstudio,ipython,gearpump,h2o"

restrictedServicesNames: "uaa,api,login"

external-tools:
  visualizations:
    - name: hue
      available: ${vcap.services.external-tools.credentials.hue.available}
      url: ${vcap.services.external-tools.credentials.hue.url}
      host: ${vcap.services.external-tools.credentials.hue.internal_host}
    - name: arcadia
      available: ${vcap.services.external-tools.credentials.arcadia.available}
      url: ${vcap.services.external-tools.credentials.arcadia.url}
      host: ${vcap.services.external-tools.credentials.arcadia.internal_host}
    - name: h2o
      available: ${vcap.services.external-tools.credentials.h2o.available}
      url: ${vcap.services.external-tools.credentials.h2o.url}
      host: ${vcap.services.external-tools.credentials.h2o.internal_host}

endpoints.enabled: false
endpoints.health.enabled: true

spring.profiles.active: in-memory
ENABLE_RETRIEVING_OF_CREDS_ONLY_ONCE: true